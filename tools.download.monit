#!/bin/bash
# download monit binary from official website
# - variables set here can be overriden through build/environment variables
toolname="monit"

# exit on error(s)
set -e

# -- base download url
[[ -z "$MONIT_BASEURL" ]] && MONIT_BASEURL="https://mmonit.com/monit/dist/binary"

# -- version to be downloaded
[[ -z "$MONIT_VERSION" ]] && MONIT_VERSION="latest"

# -- how to get available versions
versions_available=$(curl -s "$MONIT_BASEURL/" | grep "folder.gif" | sed 's/.*href="\([^"]*\).".*/\1/' | sort -t '.' -k 1,1 -k 2,2 -k 3,3 -k 4,4 -g)

# -- how to get latest available version
versions_latest=$(tail -1 <<<"$versions_available")

# -- compute version to download
[[ "$MONIT_VERSION" == "latest" ]] && MONIT_VERSION=$versions_latest


# -- compute download url
[[ "$(uname -m)" == "x86_64" ]] && download_url_suffix="linux-x64" || download_url_suffix="linux-x86"
if [[ -n "$download_url_suffix" ]];then
  download_url="${MONIT_BASEURL}/${MONIT_VERSION}/monit-${MONIT_VERSION}-${download_url_suffix}.tar.gz"
fi


# -- download & install to venv bin location
[[ -n "${APP_PATH}" ]] && target_dir="${APP_PATH}/bin" || target_dir="."
if [[ -n "${download_url}" ]];then
  echo "[${toolname}] DOWNLOADING from ${download_url} ..."
  tmppath=/tmp
  curl -s "${download_url}" | tar -xzf - -C ${tmppath}/ && cp ${tmppath}/monit-${MONIT_VERSION}/bin/monit ${target_dir}/ && rm -rf ${tmppath}/monit-${MONIT_VERSION}
  [[ -x ${target_dir}/monit ]] || chmod +x ${target_dir}/monit
  echo -n "[${toolname}] TESTING current version ... "
  ${target_dir}/monit -V
fi


# eof
